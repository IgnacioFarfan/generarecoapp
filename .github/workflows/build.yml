release:
  needs: [build-dev, build-preview]
  runs-on: ubuntu-latest
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  steps:
    - uses: actions/checkout@v3
    - name: Download dev APK artifact
      uses: actions/download-artifact@v4
      with:
        name: dev-apk
        path: .
    - name: Download preview APK artifact
      uses: actions/download-artifact@v4
      with:
        name: preview-apk
        path: .
    - name: Get commit hash
      id: get_commit
      run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    - name: Check if tag exists
      id: check_tag
      run: |
        if git ls-remote --tags origin | grep -q "refs/tags/release-${{ env.commit_hash }}"; then
          echo "tag_exists=true" >> $GITHUB_ENV
        else
          echo "tag_exists=false" >> $GITHUB_ENV
        fi
    - name: Create Tag
      if: env.tag_exists == 'false'
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag release-${{ env.commit_hash }}
        git push origin release-${{ env.commit_hash }}
    - name: Create Release
      if: env.tag_exists == 'false'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: release-${{ env.commit_hash }}
        name: ${{ env.commit_hash }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload APKs to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          devbuild.apk
          previewbuild.apk
        tag_name: release-${{ env.commit_hash }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Install rclone
      run: |
        sudo apt-get update
        sudo apt-get install -y rclone
    - name: Setup rclone config
      run: |
        echo "$RCLONE_CONF" > rclone.conf
      env:
        RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
    - name: Upload APKs to Google Drive
      run: |
        rclone --config=rclone.conf copy devbuild.apk gdrive:/geapp/
        rclone --config=rclone.conf copy previewbuild.apk gdrive:/geapp/
